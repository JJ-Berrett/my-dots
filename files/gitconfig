[user]
	email = developer@jjberrett.com
	passowrd = 

[alias]
    amend = commit --amend
    br = branch
    ck =  checkout
    ckb = checkout -b
    cm = commit
    cmm = commit -m
    ds = diff --staged -C
    fa = fetch --all
    ff = merge --ff-only
    fu = fetch upstream
    fixup = commit --amend --no-edit
    fpr = "!f() { git fetch origin refs/pull/$1/head:pr/$1; } ; f"
    l = !git lg -10
    l2 = !git lg -20
    la = !git lg --all
    lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
    prune-all = !git remote | xargs -n 1 git remote prune $1
    st = status
    sl = stash list
    ss = "!if test -z $1; then set -- 0; fi; git show --stat stash@{$1} && git show --stat stash@{$1}^3 2>/dev/null || echo No untracked files -"
    sp = "!if test -z $1; then set -- 0; fi; git stash show -p stash@{$1} && git show stash@{$1}^3 2>/dev/null || echo '\n\nNo untracked files -'"
    undo = reset --soft HEAD^
    standup = "!git lg --since yesterday --author \"$(git config user.name)\" --all"
    backup = "!git checkout -b backup-$(date +\"%Y-%m-%d_%H-%M-%S\")-$(git symbolic-ref --short HEAD); git checkout -; git lg -4"
    date = "!git commit --amend --no-verify --no-edit --date=\"$(date)\""


[core]
	editor = nano
